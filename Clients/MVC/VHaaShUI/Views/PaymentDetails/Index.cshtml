@model IEnumerable<VHaaSh.API.Modals.Database_Models.TblPaymentDetail>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

<h2>Index</h2>
<div class="container-fluid page-header mb-5">
    <div class="d-flex flex-column align-items-center justify-content-center pt-0 pt-lg-5" style="min-height: 400px">
        <h4 class="display-4 mb-3 mt-0 mt-lg-5 text-white text-uppercase font-weight-bold">Here are the PaymentDetails</h4>
        <div class="d-inline-flex">
            <p class="m-0 text-white"><a class="text-white" href="">Home</a></p>
            <p class="m-0 text-white px-2">/</p>
            <p class="m-0 text-white">Paymentdetails</p>
        </div>
    </div>
</div>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ReceiverName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PaidAmount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TblMember.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TblMembership.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TblPaymentMode.PaymentMode)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ReceiverName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PaidAmount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TblMember.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TblMembership.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TblPaymentMode.PaymentMode)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>
